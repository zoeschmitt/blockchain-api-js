service: api-v0
frameworkVersion: "2"

provider:
  name: aws
  stage: dev
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  region: us-east-1
  environment:
    TABLE_NAME: ${self:custom.environment.TABLE_NAME}
    WALLETS_PUB_KEY: ${self:custom.environment.WALLETS_PUB_KEY.${self:custom.stage}}
    WALLETS_PRIV_KEY: ${self:custom.environment.WALLETS_PRIV_KEY.${self:custom.stage}}
    OUR_WALLET: ${self:custom.environment.OUR_WALLET.${self:custom.stage}}
    ALCHEMY_KEY: ${self:custom.environment.ALCHEMY_KEY.${self:custom.stage}}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "*"

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dynamodb-local

package:
  individually: true

custom:
  stage: ${opt:stage, self:provider.stage}
  environment:
    TABLE_NAME: 10xit-prod
    WALLETS_PUB_KEY:
      dev: dev/wallets/pubkey
      prod: prod/wallets/pubkey
    WALLETS_PRIV_KEY:
      dev: dev/wallets/privkey
      prod: prod/wallets/privkey
    OUR_WALLET:
      dev: dev/ourwallet
      prod: prod/ourwallet
    ALCHEMY_KEY:
      dev: dev/alchemy
      prod: prod/alchemy
  dynamodb:
    stages:
      - dev
      - prod
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: offline/migrations
  webpack:
    webpackConfig: "webpack.config.js"
    includeModules: false # Node modules configuration for packaging
    packager: "npm" # Packager that will be used to package your external modules
    excludeFiles: src/**/*.test.js # Provide a glob for files to ignore

functions:
  createWallet:
    handler: lambdas/endpoints/createWallet.handler
    events:
      - http:
          path: create-wallet
          method: POST
          cors: true
  createNFT:
    handler: lambdas/endpoints/createNFT.handler
    events:
      - http:
          path: create-nft/{walletId}
          method: POST
          cors: true
  getAllNFTs:
    handler: lambdas/endpoints/getAllNFTs.handler
    events:
      - http:
          path: get-all-nfts
          method: GET
          cors: true
  getNFT:
    handler: lambdas/endpoints/getNFT.handler
    events:
      - http:
          path: get-nft/{id}
          method: GET
          cors: true
  getUserNFTs:
    handler: lambdas/endpoints/getUserNFTs.handler
    events:
      - http:
          path: get-user-nfts/{walletId}
          method: GET
          cors: true
  createOrg:
    handler: lambdas/endpoints/createOrg.handler
    events:
      - http:
          path: create-org
          method: POST
          cors: true
          # private: true

# resources:
#   Resources:
#     10xitprod:
#       Type: AWS::DynamoDB::Table
#       Properties:
#         TableName: ${self:custom.TABLE_NAME}
#         AttributeDefinitions:
#           - AttributeName: PK
#             AttributeType: S
#         KeySchema:
#           - AttributeName: SK
#             KeyType: S
#         BillingMode: PAY_PER_REQUEST
